swagger: '2.0'
info:
  title: TeckedIn REST API
  description: |
    REST API for the TeckedIn Application.
  version: 1.0.0
host: sample.teckedin.com
schemes:
  - https
basePath: /api/v1
securityDefinitions:
  Bearer:
    description: >
      For accessing the API a valid access token must be passed in all the
      queries in

      the 'Authorization' header.


      A valid access token is generated by the API and retourned as answer of a
      call

      to the route /login giving a valid user & password.
    type: apiKey
    name: Authorization
    in: header
produces:
  - application/json
paths:
  /login:
    post:
      summary: Login
      description: >
        Login using username and password. It does not require authentication
        header(Bearer).
      tags:
        - Security
      parameters:
        - in: body
          name: loginRequest
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                description: The username
                type: string
              password:
                description: The password
                type: string
      responses:
        '200':
          description: The operation succeeded. The token will be returned.
          schema:
            allOf:
              - $ref: '#/definitions/User'
              - properties:
                  verified:
                    type: boolean
                  accessToken:
                    type: string
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /signup:
    post:
      summary: Create User.
      description: |
        Create User.
      tags:
        - User
        - Security
      parameters:
        - name: user
          in: body
          description: The entity
          required: true
          schema:
            allOf:
              - $ref: '#/definitions/User'
              - properties:
                  password:
                    type: string
      responses:
        '200':
          description: The response identifying success.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: email already exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /logout:
    post:
      summary: Log out.
      description: |
        Logging out. It requires authentication header(Bearer).
      tags:
        - Security
      security:
        - Bearer: []
      responses:
        '200':
          description: The operation succeeded.
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /verifyEmail:
    get:
      summary: verify email.
      description: |
        verify email.
      tags:
        - User
        - Security
      parameters:
        - name: email
          in: query
          description: The email
          required: true
          type: string
        - name: verificationToken
          in: query
          description: The verification token
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded.
          schema:
            type: string
            format: boolean
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /changeForgotPassword:
    post:
      summary: Change forgot password
      description: |
        Change forgot password.
      tags:
        - Security
      parameters:
        - in: body
          name: forgotPasswordData
          schema:
            type: object
            required:
              - email
              - newPassword
              - forgotPasswordToken
            properties:
              email:
                description: The email
                type: string
              forgotPasswordToken:
                description: The forgot password token
                type: string
              newPassword:
                description: The new password
                type: string
      responses:
        '200':
          description: The operation succeeded.
          schema:
            type: string
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /initiateForgotPassword:
    post:
      summary: Initiate forgot password
      description: |
        Initiate forgot password.
      tags:
        - Security
      parameters:
        - name: email
          in: query
          description: The email
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded.
          schema:
            type: string
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /users:
    get:
      summary: Search Users.
      description: |
        Search Users.
      tags:
        - User
      security:
        - Bearer: []
      parameters:
        - name: username
          in: query
          description: The username
          required: false
          type: string
        - name: email
          in: query
          description: an email
          required: false
          type: string
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The search result will be returned.
          schema:
            type: object
            properties:
              items:
                type: array
                items:
                  $ref: '#/definitions/User'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /count/users:
    get:
      summary: Count Users.
      description: |
        Count Users.
      tags:
        - User
      security:
        - Bearer: []
      parameters:
        - name: username
          in: query
          description: The username
          required: false
          type: string
        - name: email
          in: query
          description: an email
          required: false
          type: string
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The count will be returned.
          schema:
            type: integer
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/users/{id}':
    put:
      summary: Update User. User password is updated in a separate method.
      description: |
        update User.
      tags:
        - User
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
        - name: user
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get the User.
      description: |
        retrieve User.
      tags:
        - User
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /currentUser:
    get:
      summary: Get current User.
      description: |
        retrieve User.
      tags:
        - User
      security:
        - Bearer: []
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /updatePassword:
    put:
      summary: Update user password.
      description: |
        update User password.
      tags:
        - User
        - Security
      security:
        - Bearer: []
      parameters:
        - name: password update
          in: body
          description: The password update
          required: true
          schema:
            $ref: '#/definitions/PasswordUpdate'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/User'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /technologyUsers:
    post:
      summary: Create TechnologyUser.
      description: |
        Create technologyUser.
      tags:
        - TechnologyUser
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/TechnologyUser'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyUser'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Search TechnologyUsers.
      description: |
        Search TechnologyUsers.
      tags:
        - TechnologyUser
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: query
          description: The user ID
          required: false
          type: string
        - name: name
          in: query
          description: The name.
          required: false
          type: string
        - name: countryId
          in: query
          description: The country ID
          required: false
          type: string
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/TechnologyUser'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /count/technologyUsers:
    get:
      summary: Count TechnologyUsers.
      description: |
        Count TechnologyUsers.
      tags:
        - TechnologyUser
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: query
          description: The user ID
          required: false
          type: string
        - name: name
          in: query
          description: The name.
          required: false
          type: string
        - name: countryId
          in: query
          description: The country ID
          required: false
          type: string
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The count will be returned.
          schema:
            type: integer
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/technologyUsers/{id}':
    put:
      summary: Update TechnologyUser.
      description: |
        Update TechnologyUser.
      tags:
        - TechnologyUser
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/TechnologyUser'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyUser'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get TechnologyUser.
      description: |
        Get TechnologyUser.
      tags:
        - TechnologyUser
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyUser'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete TechnologyUser
      description: |
        Delete TechnologyUser.
      tags:
        - TechnologyUser
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/technologyUsers/{id}/statistics':
    get:
      summary: Get TechnologyUser statistics.
      description: |
        Get TechnologyUser.
      tags:
        - TechnologyUser
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyUserStatistics'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/technologyUsers/{id}/upload':
    parameters:
      - name: id
        in: path
        required: true
        description: the technologyUser id
        type: number
        format: integer
    post:
      security:
        - Bearer: []
      tags:
        - TechnologyUser
      summary: upload image to TechnologyUserFile
      description: >-
        upload an image with technologyUser id , image will be upload to server
        local file system
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: The attachment file to upload.
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyUser'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
  /technologyProviders:
    post:
      summary: Create TechnologyProvider.
      description: |
        Create TechnologyProvider.
      tags:
        - TechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/TechnologyProvider'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyProvider'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Search TechnologyProviders.
      description: |
        Search TechnologyProviders.
      tags:
        - TechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: query
          description: The user ID
          required: false
          type: string
        - name: name
          in: query
          description: The name
          required: false
          type: string
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/TechnologyProvider'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /count/technologyProviders:
    get:
      summary: Count TechnologyProviders.
      description: |
        Count TechnologyProviders.
      tags:
        - TechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: query
          description: The user ID
          required: false
          type: string
        - name: name
          in: query
          description: The name
          required: false
          type: string
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The count will be returned.
          schema:
            type: integer
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/technologyProviders/{id}':
    put:
      summary: Update TechnologyProvider.
      description: |
        Update TechnologyProvider.
      tags:
        - TechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/TechnologyProvider'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyProvider'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get TechnologyProvider.
      description: |
        Get TechnologyProvider.
      tags:
        - TechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyProvider'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete TechnologyProvider
      description: |
        Delete TechnologyProvider.
      tags:
        - TechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
            
  '/technologyProviders/{id}/upload':
    parameters:
      - name: id
        in: path
        required: true
        description: the TechnologyProvider id
        type: number
        format: integer
    post:
      security:
        - Bearer: []
      tags:
        - TechnologyProvider
      summary: upload image to TechnologyProvider
      description: >-
        upload an attachment with TechnologyProvider id , attachment will be
        upload to server local file system
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: The attachment file to upload.
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyProvider'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
  '/technologyProviders/{id}/statistics':
    get:
      summary: Get TechnologyProvider statistics.
      description: |
        Get TechnologyProvider.
      tags:
        - TechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyProviderStatistics'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /posts:
    post:
      summary: Create Post.
      description: |
        Create Post.
      tags:
        - Post
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Post'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Post'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Search Posts.
      description: |
        Search Posts.
      tags:
        - Post
      security:
        - Bearer: []
      parameters:
        - name: technologyProviderId
          in: query
          description: The ID of author technology provider
          required: false
          type: string
        - name: categoryIds
          in: query
          description: category ids
          required: false
          type: string
          
        - name: state
          in: query
          description: search by state
          required: false
          type: string
        - name: product
          in: query
          description: search by product
          required: false
          type: string
        - name: service
          in: query
          description: search by service 
          required: false
          type: string
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: object
            properties:
              totalCount:
                type: number
              items:
                type: array
                items:
                  $ref: '#/definitions/Post'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /count/posts:
    get:
      summary: Count Posts.
      description: |
        Count Posts.
      tags:
        - Post
      security:
        - Bearer: []
      parameters:
        - name: technologyProviderId
          in: query
          description: The ID of author technology provider
          required: false
          type: string
        - name: categoryIds
          in: query
          description: category ids
          required: false
          type: string
        - name: publishedOnStart
          in: query
          description: The published on date start
          required: false
          type: string
          format: date
        - name: publishedOnEnd
          in: query
          description: The published on date end
          required: false
          type: string
          format: date
        - name: readingTimeLessThan
          in: query
          type: integer
          format: int32
          required: false
          description: the reading time less than number
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The count will be returned.
          schema:
            type: integer
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/posts/{id}':
    put:
      summary: Update Post.
      description: |
        Update Post.
      tags:
        - Post
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Post'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/Post'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get Post.
      description: |
        Get Post.
      tags:
        - Post
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Post'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete Post
      description: |
        Delete Post.
      tags:
        - Post
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/posts/{id}/email':
    get:
      summary: Email Post.
      description: |
        Email Post.
      tags:
        - Post
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
        - name: email
          in: query
          description: The email to send the post to.
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
            
  '/posts/{id}/upload':
    parameters:
      - name: id
        in: path
        required: true
        description: the Post id
        type: number
        format: integer
    post:
      security:
        - Bearer: []
      tags:
        - Post
      summary: upload image to Post
      description: >-
        upload an attachment with Post id , attachment will be
        upload to server local file system
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: The attachment file to upload.
        - in: query
          name: type
          type: string
          required: true
          description: The file type.
          enum:
            - image
            - attachment
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Post'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
  /postViews:
    post:
      summary: Create PostView.
      description: |
        Create PostView.
      tags:
        - PostView
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/PostView'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/PostView'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: entity already exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Search PostViews.
      description: |
        Search PostViews.
      tags:
        - PostView
      security:
        - Bearer: []
      parameters:
        - name: technologyUserId
          in: query
          description: The user ID
          required: false
          type: string
        - name: postId
          in: query
          description: The user ID
          required: false
          type: string
        - name: name
          in: query
          description: The name
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/PostView'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /count/postViews:
    get:
      summary: Count PostViews.
      description: |
        Count PostViews.
      tags:
        - PostView
      security:
        - Bearer: []
      parameters:
        - name: userId
          in: query
          description: The user ID
          required: false
          type: string
        - name: name
          in: query
          description: The name
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The count will be returned.
          schema:
            type: integer
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/postViews/{id}':
    get:
      summary: Get PostView.
      description: |
        Get PostView.
      tags:
        - PostView
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/PostView'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /postSaves:
    post:
      summary: Create PostSave.
      description: |
        Create PostSave.
      tags:
        - PostSave
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/PostSave'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/PostSave'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: entity already exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Search PostSaves.
      description: |
        Search PostSaves.
      tags:
        - PostSave
      security:
        - Bearer: []
      parameters:
        - name: postIds
          in: query
          description: the post ids
          required: false
          type: string
        - name: technologyUserId
          in: query
          description: the technologyUser id
          required: false
          type: string
        - name: statuses
          in: query
          description: the post save status
          required: false
          type: string
        - name: keywords
          in: query
          description: the keywords
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/PostSave'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /counts/postSaves:
    get:
      summary: Count PostSaves.
      description: |
        Count PostSaves.
      tags:
        - PostSave
      security:
        - Bearer: []
      parameters:
        - name: technologyProviderId
          in: query
          description: The ID of author technology provider
          required: false
          type: string
        - name: userId
          in: query
          description: user id
          required: false
          type: string
        - name: postId
          in: query
          description: post id
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/PostSave'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/postSaves/{id}':
    put:
      summary: Update PostSave.
      description: |
        Update PostSave.
      tags:
        - PostSave
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/PostSave'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/PostSave'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get PostSave.
      description: |
        Get PostSave.
      tags:
        - PostSave
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/PostSave'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete PostSave
      description: |
        Delete PostSave.
      tags:
        - PostSave
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /reviews:
    post:
      summary: Create Review.
      description: |
        Create Review.
      tags:
        - Review
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Review'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Review'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: entity already exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Search Reviews.
      description: |
        Search Reviews.
      tags:
        - Review
      security:
        - Bearer: []
      parameters:
        - name: technologyProviderId
          in: query
          description: The ID of author technology provider
          required: false
          type: string
        - name: fromUserId
          in: query
          description: user id
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Review'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /count/reviews:
    get:
      summary: Count Reviews.
      description: |
        Count Reviews.
      tags:
        - Review
      security:
        - Bearer: []
      parameters:
        - name: technologyProviderId
          in: query
          description: The ID of author technology provider
          required: false
          type: string
        - name: fromUserId
          in: query
          description: user id
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The count will be returned.
          schema:
            type: integer
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/reviews/{id}':
    put:
      summary: Update Review.
      description: |
        Update Review.
      tags:
        - Review
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Review'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/Review'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get Review.
      description: |
        Get Review.
      tags:
        - Review
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Review'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete Review
      description: |
        Delete Review.
      tags:
        - Review
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /technologyUserFiles:
    post:
      summary: Create TechnologyUserFile.
      description: |
        Create TechnologyUserFile.
      tags:
        - TechnologyUserFile
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/TechnologyUserFile'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyUserFile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Search TechnologyUserFile.
      description: |
        Search TechnologyUserFiles.
      tags:
        - TechnologyUserFile
      security:
        - Bearer: []
      parameters:
        - name: technologyUserId
          in: query
          description: The ID of ownwer technology user
          required: false
          type: string
        - name: keywords
          in: query
          description: the keywords
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/TechnologyUserFile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /count/technologyUserFiles:
    get:
      summary: Count TechnologyUserFiles.
      description: |
        Count TechnologyUserFiles.
      tags:
        - TechnologyUserFile
      security:
        - Bearer: []
      parameters:
        - name: technologyUserId
          in: query
          description: The ID of ownwer technology user
          required: false
          type: string
        - name: keywords
          in: query
          description: the keywords
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The count will be returned.
          schema:
            type: integer
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/technologyUserFiles/{id}':
    get:
      summary: Get TechnologyUserFile.
      description: |
        Get TechnologyUserFile.
      tags:
        - TechnologyUserFile
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyUserFile'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete TechnologyUserFile
      description: |
        Delete TechnologyUserFile.
      tags:
        - TechnologyUserFile
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/technologyUserFiles/{id}/upload':
    parameters:
      - name: id
        in: path
        required: true
        description: the TechnologyUserFile id
        type: number
        format: integer
    post:
      security:
        - Bearer: []
      tags:
        - TechnologyUserFile
      summary: upload attachment to TechnologyUserFile
      description: >-
        upload an attachment with TechnologyUserFile id , attachment will be
        upload to server local file system
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: The attachment file to upload.
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/TechnologyUserFile'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
  /subscribes:
    post:
      summary: create subscribe.
      description: |
        create subcribe.
      tags:
        - Subscribe
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            type: object
            properties:
              post:
                type: string
                description: the post id
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              type: object
              properties:
                user:
                  type: string
                post:
                  type: string
                createdOn:
                  type: string
                updatedOn:
                  type: string
                _id: 
                  type: string
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
      
    get:
      summary: Search subscribes.
      description: |
        Search subscribes.
      tags:
        - Subscribe
      security:
        - Bearer: []
      parameters:
        - name: user
          in: query
          description: the tech user id
          required: false
          type: string
        - name: provider
          in: query
          description: The tech provider id
          required: false
          type: string
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              type: object
              properties:
                user:
                  type: string
                post:
                  type: string
                createdOn:
                  type: string
                updatedOn:
                  type: string
                _id: 
                  type: string
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /subscribes/download:
    get:
      summary: Search subscribes.
      description: |
        Search subscribes.
      tags:
        - Subscribe
      security:
        - Bearer: []
      produces:
        - application/json
        - application/vnd.openxmlformats
      parameters:
        - name: provider
          in: query
          description: The tech provider id
          required: false
          type: string
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: file
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /notifications:
    get:
      summary: Search Notifications.
      description: |
        Search Notifications.
      tags:
        - Notification
      security:
        - Bearer: []
      parameters:
        - name: recipientUserId
          in: query
          description: The ID of recipient user
          required: false
          type: string
        - name: types
          in: query
          description: The types
          required: false
          type: string
        - name: statuses
          in: query
          description: The types
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /count/notifications:
    get:
      summary: Count Notifications.
      description: |
        Count Notifications.
      tags:
        - Notification
      security:
        - Bearer: []
      parameters:
        - name: recipientUserId
          in: query
          description: The ID of recipient user
          required: false
          type: string
        - name: types
          in: query
          description: The types
          required: false
          type: string
        - name: statuses
          in: query
          description: The types
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The count will be returned.
          schema:
            type: integer
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/notifications/{id}':
    put:
      summary: Update Notification.
      description: |
        Update Notification.
      tags:
        - Notification
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/Notification'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/Notification'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get Notification.
      description: |
        Get Notification.
      tags:
        - Notification
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/Notification'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete Notification
      description: |
        Delete Notification.
      tags:
        - Notification
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /favouriteCategories:
    post:
      summary: Create FavouriteCategory.
      description: |
        Create FavouriteCategory.
      tags:
        - FavouriteCategory
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/FavouriteCategory'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/FavouriteCategory'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: entity already exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Search FavouriteCategories.
      description: |
        Search FavouriteCategories.
      tags:
        - FavouriteCategory
      security:
        - Bearer: []
      parameters:
        - name: categoryId
          in: query
          description: The ID of category
          required: false
          type: string
        - name: userId
          in: query
          description: user id
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/FavouriteCategory'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /count/favouriteCategories:
    get:
      summary: Count FavouriteCategories.
      description: |
        Count FavouriteCategories.
      tags:
        - FavouriteCategory
      security:
        - Bearer: []
      parameters:
        - name: categoryId
          in: query
          description: The ID of category
          required: false
          type: string
        - name: userId
          in: query
          description: user id
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/FavouriteCategory'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/favouriteCategories/{id}':
    put:
      summary: Update FavouriteCategory.
      description: |
        Update FavouriteCategory.
      tags:
        - FavouriteCategory
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/FavouriteCategory'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/FavouriteCategory'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get FavouriteCategory.
      description: |
        Get FavouriteCategory.
      tags:
        - FavouriteCategory
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/FavouriteCategory'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete FavouriteCategory
      description: |
        Delete FavouriteCategory.
      tags:
        - FavouriteCategory
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /informationRequests:
    post:
      summary: Create InformationRequest.
      description: |
        Create InformationRequest.
      tags:
        - InformationRequest
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/InformationRequest'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/InformationRequest'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Search InformationRequests.
      description: |
        Search InformationRequests.
      tags:
        - InformationRequest
      security:
        - Bearer: []
      parameters:
        - name: fromUserId
          in: query
          description: user id
          required: false
          type: string
        - name: statuses
          in: query
          description: The statuses
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/InformationRequest'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /counts/informationRequests:
    get:
      summary: Count InformationRequests.
      description: |
        Count InformationRequests.
      tags:
        - InformationRequest
      security:
        - Bearer: []
      parameters:
        - name: fromUserId
          in: query
          description: user id
          required: false
          type: string
        - name: statuses
          in: query
          description: The statuses
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: integer
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/informationRequests/{id}':
    put:
      summary: Update InformationRequest.
      description: |
        Update InformationRequest.
      tags:
        - InformationRequest
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/InformationRequest'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/InformationRequest'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get InformationRequest.
      description: |
        Get InformationRequest.
      tags:
        - InformationRequest
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/InformationRequest'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete InformationRequest
      description: |
        Delete InformationRequest.
      tags:
        - InformationRequest
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /favouriteTechnologyProviders:
    post:
      summary: Create FavouriteTechnologyProvider.
      description: |
        Create FavouriteTechnologyProvider.
      tags:
        - FavouriteTechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/FavouriteTechnologyProvider'
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/FavouriteTechnologyProvider'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: entity already exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Search FavouriteTechnologyProviders.
      description: |
        Search FavouriteTechnologyProviders.
      tags:
        - FavouriteTechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: technologyProviderId
          in: query
          description: The ID of provider
          required: false
          type: string
        - name: technologyUserId
          in: query
          description: user id
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/FavouriteTechnologyProvider'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /counts/favouriteTechnologyProviders:
    get:
      summary: Count FavouriteTechnologyProviders.
      description: |
        Count FavouriteTechnologyProviders.
      tags:
        - FavouriteTechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: technologyProviderId
          in: query
          description: The ID of provider
          required: false
          type: string
        - name: technologyUserId
          in: query
          description: user id
          required: false
          type: string
        - name: createdOnStart
          in: query
          description: The created on date start
          required: false
          type: string
          format: date
        - name: createdOnEnd
          in: query
          description: The created on date end
          required: false
          type: string
          format: date
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: integer
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  '/favouriteTechnologyProviders/{id}':
    put:
      summary: Update FavouriteTechnologyProvider.
      description: |
        Update FavouriteTechnologyProvider.
      tags:
        - FavouriteTechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
        - name: entity
          in: body
          description: The entity
          required: true
          schema:
            $ref: '#/definitions/FavouriteTechnologyProvider'
      responses:
        '200':
          description: The operation succeeded. The updated entity will be returned.
          schema:
            $ref: '#/definitions/FavouriteTechnologyProvider'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: NOT FOUND - if the resource in request did not exist
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get FavouriteTechnologyProvider.
      description: |
        Get FavouriteTechnologyProvider.
      tags:
        - FavouriteTechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded. The entity will be returned.
          schema:
            $ref: '#/definitions/FavouriteTechnologyProvider'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete FavouriteTechnologyProvider
      description: |
        Delete FavouriteTechnologyProvider.
      tags:
        - FavouriteTechnologyProvider
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          description: The entity ID
          required: true
          type: string
      responses:
        '200':
          description: The operation succeeded.
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /faqItems:
    get:
      summary: Get all FAQItems.
      description: |
        Get all FAQItems.
      tags:
        - Lookup
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
        - name: types
          type: string
          required: false
          in: query
          description: the limit
        - name: keyword
          type: string
          in: query
          required: false
          description: the keywords
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/FAQItem'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /countries:
    get:
      summary: Get all Countries.
      description: |
        Get all Countries.
      tags:
        - Lookup
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /categories:
    get:
      summary: Get all Categories.
      description: |
        Get all Categories.
      tags:
        - Lookup
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
  /states:
    get:
      summary: Get all states.
      description: |
        Get all states.
      tags:
        - Lookup
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          required: false
          description: the offset
        - name: limit
          in: query
          type: integer
          format: int32
          required: false
          description: the limit
      responses:
        '200':
          description: The operation succeeded. The entities will be returned.
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                value:
                  type: string
        '400':
          description: >-
            BAD REQUEST - if there was problem with the request (e.g. malformed
            or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: >-
            NOT AUTHORIZED - if the request didn't bear authentication
            information or the authentication information is invalid.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: >-
            FORBIDDEN - if the requesting user didn't have permission to perform
            the requested operation
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: >-
            INTERNAL SERVER ERROR - if the request was properly formatted, but
            the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
definitions:
  Post:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      title:
        type: string
        description: The title.
      createdBy:
        $ref: '#/definitions/TechnologyProvider'
      category:
        $ref: '#/definitions/Category'
      imagePath:
        type: string
        description: The image path.
      attachmentPath:
        type: string
      content:
        type: string
        description: The content.
      keywords:
        type: array
        description: The keywords.
        items:
          type: string
      status:
        type: string
        enum:
          - draft
          - published
          - deleted
        description: The status.
      readingTime:
        type: integer
        format: int32
        description: The reading time.
      viewTimes:
        type: integer
        description: The read total times.
      publishedOn:
        type: string
        format: date
        description: The date published
      createdOn:
        type: string
        format: date
        description: The date created
      updatedOn:
        type: string
        format: date
  PostSave:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      post:
        $ref: '#/definitions/Post'
      user:
        $ref: '#/definitions/TechnologyUser'
      keywords:
        type: array
        description: The keywords.
        items:
          type: string
      status:
        type: string
        description: The status.
        enum:
          - active
          - expired
      expirationOption:
        type: string
        description: The expiration option.
        enum:
          - oneDay
          - oneWeek
          - oneMonth
          - sixMonths
          - oneYear
          - fiveYears
          - never
      createdOn:
        type: string
        format: date
        description: The date created
      updatedOn:
        type: string
        format: date
  PostView:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      post:
        $ref: '#/definitions/Post'
      user:
        $ref: '#/definitions/TechnologyUser'
      createdOn:
        type: string
        format: date
        description: The date created
  FavouriteCategory:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      category:
        $ref: '#/definitions/Category'
      user:
        $ref: '#/definitions/TechnologyUser'
      createdOn:
        type: string
        format: date
        description: The date created
  FavouriteTechnologyProvider:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      provider:
        $ref: '#/definitions/TechnologyProvider'
      user:
        $ref: '#/definitions/TechnologyUser'
      createdOn:
        type: string
        format: date
        description: The date created
  Review:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      provider:
        $ref: '#/definitions/TechnologyProvider'
      fromUser:
        $ref: '#/definitions/TechnologyUser'
      score:
        type: integer
        format: int32
        description: The score.
      reviewText:
        type: string
        description: The review text.
      createdOn:
        type: string
        format: date
        description: The date created
      updatedOn:
        type: string
        format: date
        description: The date updated
  InformationRequest:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      fromUser:
        $ref: '#/definitions/TechnologyUser'
      subject:
        type: string
        description: The subject.
      requestText:
        type: string
        description: The request text.
      answer:
        type: string
        description: The request text.
      status:
        type: string
        description: The status.
        enum:
          - new
          - answered
      createdOn:
        type: string
        format: date
        description: The date created
      answeredOn:
        type: string
        format: date
        description: The date answered
  Notification:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      recipientUserId:
        type: string
        description: The ID of the recipient.
      sourceUserId:
        type: string
        description: The ID of the source.
      type:
        type: string
        description: The status.
        enum:
          - newPostInFavouriteCategory
          - newPostByFavouriteProvider
      entityId:
        type: string
        description: The entity ID.
      status:
        type: string
        description: The status.
        enum:
          - new
          - read
      createdOn:
        type: string
        format: date
        description: The date created
      readOn:
        type: string
        format: date
        description: The date read
  TechnologyUser:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      firstName:
        type: string
        description: The first name.
      lastName:
        type: string
        description: The last name.
      phone:
        type: string
        description: The phone.
      userPhotoPath:
        type: string
        description: The user photo path.
      country:
        $ref: '#/definitions/Country'
      createdOn:
        type: string
        format: date
        description: The date created
      updatedOn:
        type: string
        format: date
        description: The date updated
      userId:
        type: string
        description: The ID of the user this profile belongs to.
      notifyMeByPostCreated:
        type: boolean
      notifyMeByPostUpdated:
        type: boolean
  TechnologyUserFile:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      user:
        $ref: '#/definitions/TechnologyUser'
      fileName:
        type: string
        description: The file name.
      filePath:
        type: string
        description: The file path.
      keywords:
        type: array
        description: The keywords.
        items:
          type: string
      createdOn:
        type: string
        format: date
        description: The date created
      answeredOn:
        type: string
        format: date
        description: The date answered
  TechnologyUserStatistics:
    properties:
      numberOfReadPosts:
        type: integer
        format: int32
        description: The number of read posts.
      numberOfSavedPosts:
        type: integer
        format: int32
        description: The number of saved posts.
      numberOfFavouriteProviders:
        type: integer
        format: int32
        description: The number of favourite providers.
      numberOfFavouriteCategories:
        type: integer
        format: int32
        description: The number of favourite categories.
  TechnologyProviderStatistics:
    properties:
      numberOfPosts:
        type: integer
        format: int32
        description: The number of posts.
      totalReadingTime:
        type: integer
        format: int32
        description: The total reading tine.
      usersOnPosts:
        type: integer
        format: int32
        description: The number of active users on posts.
      numberOfSubscribers:
        type: integer
        format: int32
        description: The number of Subscriber.
      numberOfFavorites:
        type: integer
        format: int32
        description: The number of Favorite.
  TechnologyProvider:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      name:
        type: string
        description: The name.
      adderess:
        $ref: '#/definitions/Address'
      contactInformation:
        $ref: '#/definitions/ContactInformation'
      logoPath:
        type: string
        description: The logo path.
      createdOn:
        type: string
        format: date
        description: The date created
      updatedOn:
        type: string
        format: date
        description: The date updated
      userId:
        type: string
        description: The ID of the user this profile belongs to.
  Address:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      street:
        type: string
        description: The street.
      town:
        type: string
        description: the town
      locality:
        type: string
        description: The name of the locality.
      postalCode:
        type: string
        description: The postal code.
      state:
        type: string
        description: The state.
  ContactInformation:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      phone:
        type: string
        description: The phone.
      email:
        type: string
        description: The email.
      website:
        type: string
        description: The website.
  Country:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      value:
        type: string
        description: The value.
  Category:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      name:
        type: string
        description: The value.
      iconPath:
        type: string
        description: The icon path.
  FAQItem:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      question:
        type: string
        description: The question.
      answer:
        type: string
        description: The answer.
      type:
        type: string
        description: the user type
  User:
    properties:
      _id:
        type: string
        description: The ID of the entity.
      email:
        type: string
        description: The email.
      username:
        type: string
        description: The username.
      type:
        type: string
        description: The user type.
        enum:
          - technologyUser
          - technologyProvider
  Error:
    properties:
      message:
        type: string
        description: The error message.
  PasswordUpdate:
    properties:
      newPassword:
        type: string
        description: The new password.
      oldPassword:
        type: string
        description: The old password.
